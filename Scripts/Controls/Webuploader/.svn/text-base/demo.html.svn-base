<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title></title>
		<link rel="stylesheet" type="text/css" href="webuploader.css"/>
		<link rel="stylesheet" type="text/css" href="../../../Content/bootstrap.min.css"/>
		<script src="http://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script>
		<script src="webuploader.min.js" type="text/javascript" charset="utf-8"></script>
	</head>
	<body>
		<!--dom结构部分-->
		<div id="uploader-demo">  
		    <!--用来存放item-->  
		    <div id="thelist" class="uploader-list" ></div>  
		    <div class="uploader">  
			     <div id="filePicker">选择图片</div>  
			     <button id="ctlBtn" class="btn btn-default">开始上传</button>  
		    </div>  
		</div>  

	<script type="text/javascript">
		 $(function(){  
		   /*init webuploader*/  
		   var $list=$("#thelist");   //上传列表。  
		   var $btn =$("#ctlBtn");   //开始上传按钮  
		   var thumbnailWidth = 100;   //缩略图高度和宽度 （单位是像素），当宽高度是0~1的时候，是按照百分比计算，具体可以看api文档  
		   var thumbnailHeight = 100;  
		   var uploader = WebUploader.create({  
		       auto: false,   // 选完文件后，是否自动上传。  
		       swf: '${ctxStatic }/webupload/Uploader.swf',   // swf文件路径  
		       server: '/apm-web/a/test/',   // 文件接收服务端。  
		       pick: '#filePicker',   // 选择文件的按钮。可选。  
//		       accept: {   // 只允许选择图片文件。 
//		           title: 'Images',  
//		           extensions: 'gif,jpg,jpeg,bmp,png',  
//		           mimeTypes: 'image/*'  
//		       },
			   resize: false,    // 不压缩image, 默认如果是jpeg，文件上传前会压缩一把再上传！
		       method:'POST' 
		   });  
		   // 当有文件添加进来的时候  
		   uploader.on( 'fileQueued', function( file ) {  // webuploader事件.当选择文件后，文件被加载到文件队列中，触发该事件。等效于 uploader.onFileueued = function(file){...} ，类似js的事件定义。  
		       var $li = $(  
		               '<div id="' + file.id + '" class="file-item thumbnail">' +  
		                   '<img>' +  
		                   '<div class="info">' + file.name + '</div>' +  
		               '</div>'  
		               ),  
		           $img = $li.find('img');  
		       // $list为容器jQuery实例  
		       $list.append( $li );  
		       // 创建缩略图, 如果为非图片文件，可以不用调用此方法。 
		       // thumbnailWidth x thumbnailHeight 为 100 x 100  
		       uploader.makeThumb( file, function( error, src ) {   //webuploader方法  
		           if ( error ) {  
		               $img.replaceWith('<span>不支持预览</span>');  
		               return;  
		           }  
		           $img.attr( 'src', src );  
		       }, thumbnailWidth, thumbnailHeight );  
		   });  
		   // 文件上传过程中创建进度条实时显示。  
		   uploader.on( 'uploadProgress', function( file, percentage ) {
			    var $li = $( '#'+file.id ),
			        $percent = $li.find('.progress .progress-bar');
			    // 避免重复创建
			    if ( !$percent.length ) {
			        $percent = $('<div class="progress progress-striped active">' +
			          '<div class="progress-bar" role="progressbar" style="width: 0%">' +
			          '</div>' +
			        '</div>').appendTo( $li ).find('.progress-bar');
			    }
			    $percent.css( 'width', percentage * 100 + '%' );
			});  
		   // 文件上传成功，给item添加成功class, 用样式标记上传成功。  
		   uploader.on( 'uploadSuccess', function( file ) {  
		       $( '#'+file.id ).addClass('upload-state-done');  
		   });  
		   // 文件上传失败，显示上传出错。  
		   uploader.on( 'uploadError', function( file ) {  
		       var $li = $( '#'+file.id ),  
		           $error = $li.find('div.error');  
		       // 避免重复创建  
		       if ( !$error.length ) {  
		           $error = $('<div class="error"></div>').appendTo( $li );  
		       }  
		       $error.text('上传失败');  
		   });  
		   // 完成上传完了，成功或者失败，先删除进度条。  
		   uploader.on( 'uploadComplete', function( file ) {  
		       $( '#'+file.id ).find('.progress').remove();  
		   });  
		      $btn.on( 'click', function() {  
		        console.log("上传...");  
		        uploader.upload();  
		        console.log("上传成功");  
		      });  
		  });  
	</script>
	</body>
</html>
